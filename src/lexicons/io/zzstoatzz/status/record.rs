// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `io.zzstoatzz.status.record` namespace.
use atrium_api::types::TryFromUnknown;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct RecordData {
    ///When this status was created
    pub created_at: atrium_api::types::string::Datetime,
    ///Status emoji
    pub emoji: String,
    ///Optional expiration timestamp for this status
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub expires: core::option::Option<atrium_api::types::string::Datetime>,
    ///Optional status text description
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub text: core::option::Option<String>,
}
pub type Record = atrium_api::types::Object<RecordData>;
impl From<atrium_api::types::Unknown> for RecordData {
    fn from(value: atrium_api::types::Unknown) -> Self {
        Self::try_from_unknown(value).unwrap()
    }
}
